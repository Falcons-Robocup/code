#!/usr/bin/env python

'''
 ' teamplayHeightmaps.cfg
 '
 '  Created on: Nov 30, 2017
 '      Author: Coen Tempelaars
'''

PACKAGE = "teamplay"

import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

_actions = {
'actionDefendAttackingOpponent': 'Defend (attacking opponent)',
'actionDribbleForPass': 'Dribble for pass',
'actionDribbleForShot': 'Dribble for shot at goal',
'actionMoveToFreeSpot': 'Move to free spot',
'actionPositionForOppSetpiece': 'Position for opponent setpiece',
'actionPositionForOwnSetpiece': 'Position for own setpiece',
}

_heightmaps = {
'hmAvoidBall': 'Avoid ball',
'hmAvoidObstacles': 'Avoid obstacles',
'hmAvoidTeamMates': 'Avoid team mates',
'hmBetweenPoiAndClosestObstacle': 'Between POI and closest obstacle',
'hmCloseToBallClaimedLocation': 'Close to ball claimed location',
'hmCloseToOwnPos': 'Close to own position',
'hmInFrontOfOppGoal': 'In front of opponent goal',
'hmNearObstacles': 'Near obstacles',
'hmNearOwnGoal': 'Near own goal',
'hmObstaclesBlockingBall': 'Avoid obstacles that block the ball',
'hmObstaclesBlockingOppGoal': 'Avoid obstacles that block the opponent goal',
'hmObstaclesBlockingTeammates': 'Avoid obstacles that block teammates',
}

gen = ParameterGenerator()

# Generate contribution factors per heightmap, per action:
for action_key, action_value in _actions.iteritems():
    for heightmap_key, heightmap_value in _heightmaps.iteritems():
        microhelp = 'Contribution of heightmap: ' + heightmap_value + ' to action: ' + action_value
        gen.add(action_key + '_' + heightmap_key, double_t, 0, microhelp, 0.0, 0.0, 1.0)

exit(gen.generate(PACKAGE, "teamplayNode", "teamplayHeightmaps"))

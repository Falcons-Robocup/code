#!/bin/bash
#
# This script is always run on real robot.
# It starts a listener (robotControl) and boots the software, if so configured.
# 
# This script is called from Ubuntu "Startup applications".
# Instructions to enable it:
#  * do for each robot r1..r6 via TeamViewer:
#    * click on "dash home" top-left
#    * type in the search field "startup"
#    * open "Startup Applications"
#    * add a new entry
#      * Name   : falconsControl autoboot
#      * Command: /home/robocup/falcons/code/packages/robotControl/autoboot
#      * Comment: falconsControl autoboot
#
# TODO: redesign configuration management (old: robot.cfg, matchmode etc, instead centralize in a package (#289))
# 
# JFEI 2015-07-10 creation
# JFEI 2015-12-05 migrated from autoboot.sh from to-become-obsolete coachCommands to new package robotControl

#
# TODO
# * 
# 



# create standard environment
source /home/robocup/falcons/code/scripts/falconsconfig.sh

# give some time to come online
sleep 5 

# we do not use m4log anymore
pkill m4log

# make logging directory for stdout, stderr and tracing
createLogdir

# for now, always enable tracing
# TODO: make opt-in (configuration management)
set_tracing_trigger.sh `newest_logdir.py`

# start a roscore
processStart roscore &

# start robotControl in the right context (ROS namespace etc, needed for command relays)
source `which contextSet`
robotControl daemon

# override wifi setting
configOverrideApply
echo asml | sudo -S nmcli con up id `configGet globalConfig/accessPoint` iface $(/sbin/ifconfig -a | grep HWaddr | awk '{print $1}' | grep wlan)

# to actually start the robot software, one needs to explicitly send a command "jobStart robotReal"
# or use global config autoboot setting, which will trigger the next section

if `configGet globalConfig/autoBoot` = "true" ; then
    sleep 3
    # init issue for old peripherals.sym: wait until ttyS6 is available
    it=0
    while :; do
        let "it = it + 1"
        if [ -c /dev/ttyS6 ]; then
            break
        fi
        if [ "$it" = 10 ]; then
            # give up after some time
            break
        fi
        sleep 3
    done
    # now start robot software
    jobStart robotReal &
fi


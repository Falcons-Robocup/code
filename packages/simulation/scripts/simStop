#! /usr/bin/env python3

import argparse
import logging
import os
import subprocess

TEAMS = ['A', 'B']
ROBOTS = ['1', '2', '3', '4', '5']

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Stops the Falcons simulator')
    parser.add_argument('-k', '--kill', action="store_true",
           help='after stopping all simStarted processes, kill all Falcons processes (for extra certainty)')
    args = parser.parse_args()

    logging.basicConfig(level=logging.INFO)
    logging.info('Falcons simulator stopping...')

    logging.info('Stopping blockly')
    subprocess.Popen(['processStop', 'blockly'])

    logging.info('Stopping execution')
    subprocess.Popen(['processStop', 'execution'])

    logging.info('Stopping simworld')
    subprocess.Popen(['processStop', 'simworld'])

    logging.info('Stopping refbox')
    subprocess.Popen(['processStop', 'refboxGui'])
    subprocess.Popen(['jobStop', 'A0_coachPart1'])
    subprocess.Popen(['jobStop', 'B0_coachPart1'])

    logging.info('Stopping processes for all robots')
    for team in TEAMS:
        for robot in ROBOTS:
            contextkey = '{}{}'.format(team, robot)
            subprocess.Popen(['jobStop', '{}_robotSim'.format(contextkey)])

    logging.info('Stopping supporting processes')
    subprocess.Popen(['processStop', 'logger'])
    subprocess.Popen(['processStop', 'rtdbSync'])
    subprocess.Popen(['processStop', 'visualizer'])

    os.unsetenv('SIMULATED')

    if args.kill:
        logging.info('Killing any remaining Falcons processes...')
        subprocess.Popen(['processStopAll'])

    logging.info('Falcons simulator stopped')

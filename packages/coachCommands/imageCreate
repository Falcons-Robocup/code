#!/bin/bash
#
# JFEI 2016-05-02 creation
#
# Create an image. Assumes successful build has been done.
#
# See for more info wiki:buildImages
#
# TODO: use detailed exclude list to compress tarball - this may require tar version 1.28 (option --exclude-vcs-ignore)



# go to codebase root
cd $TURTLEROOT


# settings
branch=`getGitBranch`
timeStamp=`date '+%Y%m%d'`
gitId=`git log | head -1 | cut -c 8-13`
imageName=
imageServer=`imageServer`
imageLocation=~/IMAGES
excludeOpts=" --exclude-vcs --exclude=wmTracking "
doUpload=


# go one level up to include teamplayData as well
cd ..


# option parsing
while getopts "s:n:L:uU" opt; do
    case "$opt" in
    n)  imageName=$OPTARG
        ;;
    u)  doUpload=1
        ;;
    U)  doUpload=0
        ;;
    s)  imageServer=$OPTARG
        ;;
    L)  imageLocation=$OPTARG
        ;;
    esac
done
shift $((OPTIND-1))


# work out names
if [ ! -d $imageLocation ]; then
    mkdir $imageLocation
fi
fullImageName=${branch}_${timeStamp}_${gitId}
if [ -n "$imageName" ]; then
    fullImageName=${fullImageName}_$imageName
fi


# create the image, locally
echo "creating image: $imageLocation/$fullImageName.tgz"
tar $excludeOpts -c -z -f $imageLocation/$fullImageName.tgz code teamplayData


# upload to imageServer? (no full imageSync, takes too long)
while [ -z "$doUpload" ]; do
    echo -n "upload to imageserver ($imageServer)? enter y/n: "
    read ans 
    if [ "$ans" = "y" ]; then
        doUpload=1
    fi
    if [ "$ans" = "n" ]; then
        doUpload=0
    fi
done
if [ "$doUpload" = 1 ]; then
    echo "uploading ..."
    scp $imageLocation/$fullImageName.tgz $imageServer:$imageLocation
fi


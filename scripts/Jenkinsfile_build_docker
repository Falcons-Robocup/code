
def check_remove_image() {
    sh(
        returnStdout: true,
        script: '''
            #!/bin/bash
            image_tag="${DOCKER_FALCONS_IMAGE_TAG}"
            docker inspect --type=image $image_tag >/dev/null 2>&1
            if [ $? -eq 0 ]
            then
                docker rmi -f $image_tag
            fi
        '''.stripIndent()
    )
}

pipeline {

    agent any

    parameters {

        choice(
            name: 'DOCKER_UBUNTU_BASE_VERSION',
            choices: ["2004", "1604"],
            description: 'Docker Ubuntu base version'
        )

        string(
            name: 'DOCKER_FALCONS_IMAGE_TAG',
            defaultValue: 'falcons_build_2004:latest',
            description: 'Docker falcons tag'
        )

    }

    stages {

        stage('Building image') {
            steps {
                script {
                    // remove if images exists already
                    check_remove_image()
                    dockerImage = docker.build("${params.DOCKER_FALCONS_IMAGE_TAG}", "-f falcons/code/scripts/Dockerfile_${params.DOCKER_UBUNTU_BASE_VERSION} ..")
                }
            }
        }

    }

    post {
        always {
            cleanWs()
        }
    }
}

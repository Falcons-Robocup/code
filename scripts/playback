#!/usr/bin/env python3
#
# Inspect matchlog file.



import argparse
import os, glob


DEFAULTLOGDIR = "/var/tmp"
TMPLOGDIR = "/var/tmp/playback"


def findNewestLogFile():
    logdir = DEFAULTLOGDIR
    result = None
    list_of_files = glob.glob(logdir + '/' + '*.rdl*') # also allow .gz
    if len(list_of_files):
        return max(list_of_files, key=os.path.getctime)
    return None


def run(logfile):
    assert(os.path.isfile(logfile))
    # clear RTDB
    os.system('rtdbClear')
    # ensure cache folder exists
    if not os.path.isdir(TMPLOGDIR):
        os.mkdir(TMPLOGDIR)
    # copy unpacked to cache location if not already there
    do_copy = False
    target = TMPLOGDIR + "/" + os.path.basename(os.path.abspath(logfile)).replace('.gz', '')
    if not os.path.isfile(target):
        do_copy = True
    else:
        if os.path.getctime(target) < os.path.getctime(logfile):
            do_copy = True
    if do_copy:
        os.system('cp ' + logfile + ' ' + TMPLOGDIR)
        if logfile.endswith('.gz'):
            os.system('gunzip ' + target + ".gz")
    logfile = target
    # run visualizer in playback mode
    os.system('frun visualizer visualizer ' + logfile)


if __name__ == '__main__':
    # Argument parsing.
    parser     = argparse.ArgumentParser(description='RTDB matchlog inspection')
    parser.add_argument('logfile', help='.rdl log file to use', nargs='?', default=None)
    args       = parser.parse_args()
    # In case log file is provided, then use it
    if args.logfile != None:
        run(args.logfile)
    else:
        run(findNewestLogFile())


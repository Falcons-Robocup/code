#!/usr/bin/env bash
#
# 2017-01-26 JFEI
# utility to extract obstacle- and ball tracker details 
# if called on robot, it will construct a .tgz file in /var/tmp
# if called on dev laptop, it will call per robot this script to create the tgz file, then fetch it and merge
# each text file is simply a matrix of numerical values (without header!), so we can quickly load in Matlab
# 




logcd=`ls -1dt /var/tmp/falco* | head -1`

# note: in trace grep, the last 12 chars after functionname are thread-id, to be filtered

function getTraceFiles()
{
    ls -altr1 trace_*_wm*.txt | awk '{print $NF}'
}

function ballMeasurements()
{
    (
        #echo "# r id              time       camx       camy       camz     camphi         az         el          r       conf"
        grep traceMeasurement `getTraceFiles` | grep ball | grep -v existing | grep -v creating | grep -v reject | sed 's/.*traceMeasurement ............//'
    ) > ballMeasurements.txt
}

function ballResults()
{
    (
        #echo "#            time #tr #b   id conf   solx   soly   solz  solvx  solvy  solvz   age #meas ncam omni qcam qage   qm  qfr   qz   qv qfit  res"
        grep traceTrackers `getTraceFiles` | grep ball | sed 's/.*traceTrackers ............//'
    ) > ballResults.txt
}

function obstacleMeasurements()
{
    (
        #echo "# r id              time       camx       camy       camz     camphi         az         el          r       conf"
        grep addMeasurement `getTraceFiles` | grep obstacle | grep -v existing | sed 's/.*addMeasurement ............//'
    ) > obstacleMeasurements.txt
}

function obstacleResults()
{
    (
        #echo "#            time #tr ok   id      x      y     vx     vy   N    age  fresh"
        grep traceTrackers `getTraceFiles` | grep obstacle | sed 's/.*traceTrackers ............//'
    ) > obstacleResults.txt
}

function localizationVisionMeasurements()
{
    (
        #echo "#            time #time    x    y    phi  conf   coordtype"
        grep traceVisionMeasurement `getTraceFiles` | sed 's/.*traceVisionMeasurement ............//'
    ) > localizationVisionMeasurements.txt
}

function localizationDisplacementMeasurements()
{
    (
        #echo "#            time #time    dx    dy    dphi    vx    vy    vphi    coordtype    source"
        grep traceDisplacement `getTraceFiles` | sed 's/.*traceDisplacement ............//'
    ) > localizationDisplacementMeasurements.txt
}

function localizationCalculationCalls()
{
    (
        #echo "#            time #time"
        grep traceCalculatePositionAndVelocity `getTraceFiles` | sed 's/.*traceCalculatePositionAndVelocity ............//'
    ) > localizationCalculationTimestamps.txt
}

function onRobot()
{
    cd $1
    ballMeasurements
    ballResults
    obstacleMeasurements
    obstacleResults
    localizationVisionMeasurements
    localizationDisplacementMeasurements
    localizationCalculationCalls
    # make tgz
    tar czvf wmTracing_r${TURTLE5K_ROBOTNUMBER}_`date +%Y%m%d_%H%M%S`.tgz ballMeasurements.txt ballResults.txt obstacleMeasurements.txt obstacleResults.txt localizationVisionMeasurements.txt localizationDisplacementMeasurements.txt localizationCalculationTimestamps.txt
    # send to coach or custom devlaptop
}

function onCoach()
{
    robots=`getActiveRobots`
    cmd=getWmTracing
    for r in $robots ; do
        ssh $r $cmd &
    done
    wait
    # gather results
}

# determine coach or robot mode
if [ ! -z "$TURTLE5K_ROBOTNUMBER" ]; then
    if [ -z "$1" ]; then
        onRobot $logcd
    else
        onRobot $1
    fi
else
    onCoach
fi

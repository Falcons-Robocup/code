#!/bin/bash


# hook in the test suite to integrate build&test status from Jenkins in Gitlab
# in case a build or test fails, then this script will immediately post a comment in Gitlab, linked to the commit



# check if running from buildserver 
# see for environment listing: http://172.16.74.60:8080/jenkins/env-vars.html/
if [ -z "${BUILD_URL}" ]; then
    # do nothing
    exit 0
fi

# get arguments
what=$1
exitcode=$2
if [ -z "$exitcode" ]; then
    # bad call, do nothing
    exit 0
fi

# dump environment in jenkins log
env

# make status code readable
currentState="OK"
if [ "$exitcode" != "0" ]; then
    currentState="FAILING" # don't care about particular value of exitcode
fi

# get previous state
stateFile=/var/tmp/buildServerState$what
if [ ! -f $stateFile ]; then
    previousState="UNKNOWN"
else
    previousState=`cat $stateFile`
fi

# handle state change
if [ $currentState != $previousState ]; then
    echo
    echo "status changed from $previousState to $currentState"
    echo
    note="$what%20is%20now%20$currentState"
    if [ $currentState != "OK" ]; then
        note="$note,%20see%20${BUILD_URL}"
        # try to detect instability
        # first see what we get in environment; not sure if the following works out of the box..
        #if [ "${GIT_PREVIOUS_SUCCESSFUL_COMMIT}" = "${GIT_COMMIT}" ]; then
        #    note="$what%20is%20now%20UNSTABLE,%20see%20${BUILD_URL}"
        #fi
    fi
    # upload the comment in gitlab activity log
    postAsJenkinsToCommit ${GIT_COMMIT} "$note"
fi

# write current state
echo $currentState > $stateFile


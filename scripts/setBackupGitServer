#!/bin/bash

if [ -z "$1" ]
then
	echo "Usage: setBackupGitServer <hostname>"
	exit -1
fi

switch_repository() {
	cd ~/falcons/$2

	echo "Setting git server $1 for repository $2."

	if [[ -n $(git status -s) ]]
	then
		echo "Not commited changes/untracked files in directory. Please commit/stash changes before running this script."
		exit
	fi

	original_branch=$(git rev-parse --abbrev-ref HEAD)

	remotes=$(git remote)
	if [[ ${remotes[*]} =~ "$1" ]]
	then
		echo "Removing remote $1."
		git remote remove $1 > /dev/null
	fi

	git remote add $1 ssh://robocup@$1:22/~/gitrepo/$2.git > /dev/null

	branches=$(git branch | cut -c 3-)
	git fetch $1 > /dev/null

	for branch in $branches
	do
		git checkout $branch &> /dev/null

		if git rev-parse --verify remotes/$1/$branch &> /dev/null
		then
			echo "Setting branch $branch to track upstream $1."
			git branch --set-upstream-to=$1/$branch > /dev/null
		else
			echo "Branch $branch does not exist on $1; do you want me to manually push it to $1/$branch? (y/N)"
			read answer
			if [ "$answer" != "${answer#[Yy]}" ]
			then
				echo "Pushing branch $branch to remote $1."
				git push -u $1/$branch
			fi
		fi
	done

	git checkout $original_branch &> /dev/null
}

switch_repository $1 teamplayData
echo ""
switch_repository $1 code
